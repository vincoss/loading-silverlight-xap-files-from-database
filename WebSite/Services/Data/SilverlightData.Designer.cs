//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace WebSite.Services.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SilverlightDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SilverlightDataEntities object using the connection string found in the 'SilverlightDataEntities' section of the application configuration file.
        /// </summary>
        public SilverlightDataEntities() : base("name=SilverlightDataEntities", "SilverlightDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SilverlightDataEntities object.
        /// </summary>
        public SilverlightDataEntities(string connectionString) : base(connectionString, "SilverlightDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SilverlightDataEntities object.
        /// </summary>
        public SilverlightDataEntities(EntityConnection connection) : base(connection, "SilverlightDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BinaryStream> BinaryStreams
        {
            get
            {
                if ((_BinaryStreams == null))
                {
                    _BinaryStreams = base.CreateObjectSet<BinaryStream>("BinaryStreams");
                }
                return _BinaryStreams;
            }
        }
        private ObjectSet<BinaryStream> _BinaryStreams;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BinaryStreams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBinaryStreams(BinaryStream binaryStream)
        {
            base.AddObject("BinaryStreams", binaryStream);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SilverlightDataModel", Name="BinaryStream")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BinaryStream : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BinaryStream object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static BinaryStream CreateBinaryStream(global::System.Int32 id, global::System.String fileName, global::System.String contentType, global::System.Int64 size)
        {
            BinaryStream binaryStream = new BinaryStream();
            binaryStream.Id = id;
            binaryStream.FileName = fileName;
            binaryStream.ContentType = contentType;
            binaryStream.Size = size;
            return binaryStream;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int64 _Size;
        partial void OnSizeChanging(global::System.Int64 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] BlobData
        {
            get
            {
                return StructuralObject.GetValidValue(_BlobData);
            }
            set
            {
                OnBlobDataChanging(value);
                ReportPropertyChanging("BlobData");
                _BlobData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlobData");
                OnBlobDataChanged();
            }
        }
        private global::System.Byte[] _BlobData;
        partial void OnBlobDataChanging(global::System.Byte[] value);
        partial void OnBlobDataChanged();

        #endregion
    
    }

    #endregion
    
}
